# .github/workflows/test-sftp.yml
name: Test SFTP Connection

on:
  workflow_dispatch:
    inputs:
      test_upload:
        description: "Test file upload (creates/deletes test file)"
        required: false
        default: false
        type: boolean

jobs:
  test-connection:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 🦄 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Install SFTP client
        run: npm install ssh2-sftp-client

      - name: 🔌 Test SFTP Connection
        env:
          SFTP_HOST: ${{ secrets.SFTP_HOST }}
          SFTP_PORT: ${{ secrets.SFTP_PORT }}
          SFTP_USERNAME: ${{ secrets.SFTP_USERNAME }}
          SFTP_PASSWORD: ${{ secrets.SFTP_PASSWORD }}
        run: |
          node -e "
          const Client = require('ssh2-sftp-client');
          
          async function testConnection() {
            const sftp = new Client();
          
            try {
              console.log('🔌 Attempting to connect...');
              console.log('Host:', process.env.SFTP_HOST);
              console.log('Port:', process.env.SFTP_PORT);
              console.log('Username:', process.env.SFTP_USERNAME);
          
              await sftp.connect({
                host: process.env.SFTP_HOST,
                port: parseInt(process.env.SFTP_PORT) || 22,
                username: process.env.SFTP_USERNAME,
                password: process.env.SFTP_PASSWORD,
                readyTimeout: 20000,
                retries: 1
              });
          
              console.log('✅ Connection successful!');
          
              // Test directory listing
              console.log('📁 Testing directory listing...');
              const list = await sftp.list('./');
              console.log('Directory contents:');
              list.slice(0, 10).forEach(item => {
                console.log(\`  \${item.type === 'd' ? '📁' : '📄'} \${item.name} (\${item.size} bytes)\`);
              });
          
              // Test file upload if requested
              if ('${{ inputs.test_upload }}' === 'true') {
                console.log('📤 Testing file upload...');
          
                // Create a test file
                const testContent = 'GitHub Action SFTP Test - ' + new Date().toISOString();
                const testFileName = 'github-action-test.txt';
          
                await sftp.put(Buffer.from(testContent), './' + testFileName);
                console.log('✅ Test file uploaded successfully');
          
                // Verify it exists
                const exists = await sftp.exists('./' + testFileName);
                console.log('✅ Test file exists:', exists);
          
                // Clean up - delete the test file
                await sftp.delete('./' + testFileName);
                console.log('🗑️ Test file deleted');
              }
          
              await sftp.end();
              console.log('✅ All tests passed!');
          
            } catch (error) {
              console.error('❌ Connection failed:');
              console.error('Error code:', error.code);
              console.error('Error message:', error.message);
          
              if (error.code === 'ENOTFOUND') {
                console.error('💡 This usually means the hostname is incorrect');
                console.error('💡 Common Strato hostnames: sftp.strato.de, ssh.strato.de');
              } else if (error.code === 'ECONNREFUSED') {
                console.error('💡 This usually means the port is incorrect or service is down');
                console.error('💡 Standard SFTP port is 22');
              } else if (error.message.includes('Authentication failed')) {
                console.error('💡 Username or password is incorrect');
              }
          
              process.exit(1);
            }
          }
          
          testConnection();
          "

      - name: 🎉 Success Summary
        run: |
          echo "🎉 SFTP connection test completed successfully!"
          echo "Your credentials are working and you can proceed with deployment."